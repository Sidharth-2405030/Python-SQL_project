--Top 10 highest revenue generating products
 SELECT top 10 product_id, sum(sale_price) as sales from df_orders group by product_id order by sales desc;




--Top 5 highest selling products in each region
with cte as(
SELECT region, product_id, sum(sale_price) as sales from df_orders group by region, product_id)
select * from(
select *, ROW_NUMBER() over(PARTITION by region order by sales desc) as rn
from cte) A 
where rn<=5




--Month over month growth comparison for 2022 and 2023 sales
with cte as(
select year(order_date) as order_year, month(order_date) as order_month, 
sum(sale_price) as sales 
from df_orders 
group by YEAR(order_date), MONTH(order_date)
)
SELECT
order_month
, sum(case when order_year=2022 then sales else 0 end) as sales_2022
, sum(case when order_year=2023 then sales else 0 end) as sales_2023
from cte
group by order_month
order by order_month




--For each category which month has highest sale
with cte as(
select category, format(order_date, 'yyyyMM') as order_month, SUM(sale_price) as sales 
from df_orders 
group by category, format(order_date, 'yyyyMM')
)
select * from (
select *, ROW_NUMBER() OVER(PARTITION by category order by sales desc) as rn from cte
) A 
where rn =1




--Which sub category had highest growth by profit in 2023 compare to 2022
with cte as(
select sub_category, sum(profit) as profit, year(order_date) as order_year
from df_orders
group by sub_category, year(order_date)
--order by sub_category, order_year desc
)
, cte2 as(
SELECT sub_category
, sum(case when order_year = 2023 then profit else 0 END) as sales_2023
, sum(case when order_year = 2022 then profit else 0 END) as sales_2022
from cte
group by sub_category
)
select top 1 *,
sales_2023-sales_2022 as profit_growth
from cte2
ORDER by profit_growth DESC